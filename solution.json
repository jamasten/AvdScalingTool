{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "13038308478230083171"
    }
  },
  "parameters": {
    "AutomationAccountName": {
      "type": "string"
    },
    "BeginPeakTime": {
      "type": "string",
      "defaultValue": "8:00"
    },
    "EndPeakTime": {
      "type": "string",
      "defaultValue": "17:00"
    },
    "ExistingAutomationAccount": {
      "type": "bool"
    },
    "HostPoolName": {
      "type": "string"
    },
    "HostPoolResourceGroupName": {
      "type": "string"
    },
    "LimitSecondsToForceLogOffUser": {
      "type": "string",
      "defaultValue": "0"
    },
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "LogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "MinimumNumberOfRdsh": {
      "type": "string",
      "defaultValue": "0"
    },
    "SessionHostsResourceGroupName": {
      "type": "string"
    },
    "SessionThresholdPerCPU": {
      "type": "string",
      "defaultValue": "1"
    },
    "Tags": {
      "type": "object"
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
    },
    "Time": {
      "type": "string",
      "defaultValue": "[utcNow('u')]"
    }
  },
  "variables": {
    "RoleAssignments": "[if(equals(parameters('HostPoolResourceGroupName'), parameters('SessionHostsResourceGroupName')), createArray(parameters('HostPoolResourceGroupName')), createArray(parameters('HostPoolResourceGroupName'), parameters('SessionHostsResourceGroupName')))]",
    "RunbookName": "AvdScalingTool",
    "TimeDifferences": {
      "australiacentral": "+10:00",
      "australiacentral2": "+10:00",
      "australiaeast": "+10:00",
      "australiasoutheast": "+10:00",
      "brazilsouth": "-3:00",
      "brazilsoutheast": "-3:00",
      "canadacentral": "-5:00",
      "canadaeast": "-5:00",
      "centralindia": "+5:30",
      "centralus": "-6:00",
      "chinaeast": "+8:00",
      "chinaeast2": "+8:00",
      "chinanorth": "+8:00",
      "chinanorth2": "+8:00",
      "eastasia": "+8:00",
      "eastus": "-5:00",
      "eastus2": "-5:00",
      "francecentral": "+1:00",
      "francesouth": "+1:00",
      "germanynorth": "+1:00",
      "germanywestcentral": "+1:00",
      "japaneast": "+9:00",
      "japanwest": "+9:00",
      "jioindiacentral": "+5:30",
      "jioindiawest": "+5:30",
      "koreacentral": "+9:00",
      "koreasouth": "+9:00",
      "northcentralus": "-6:00",
      "northeurope": "0:00",
      "norwayeast": "+1:00",
      "norwaywest": "+1:00",
      "southafricanorth": "+2:00",
      "southafricawest": "+2:00",
      "southcentralus": "-6:00",
      "southindia": "+5:30",
      "southeastasia": "+8:00",
      "swedencentral": "+1:00",
      "switzerlandnorth": "+1:00",
      "switzerlandwest": "+1:00",
      "uaecentral": "+3:00",
      "uaenorth": "+3:00",
      "uksouth": "0:00",
      "ukwest": "0:00",
      "usdodcentral": "-6:00",
      "usdodeast": "-5:00",
      "usgovarizona": "-7:00",
      "usgoviowa": "-6:00",
      "usgovtexas": "-6:00",
      "usgovvirginia": "-5:00",
      "westcentralus": "-7:00",
      "westeurope": "+1:00",
      "westindia": "+5:30",
      "westus": "-8:00",
      "westus2": "-8:00",
      "westus3": "-7:00"
    },
    "TimeZones": {
      "australiacentral": "AUS Eastern Standard Time",
      "australiacentral2": "AUS Eastern Standard Time",
      "australiaeast": "AUS Eastern Standard Time",
      "australiasoutheast": "AUS Eastern Standard Time",
      "brazilsouth": "E. South America Standard Time",
      "brazilsoutheast": "E. South America Standard Time",
      "canadacentral": "Eastern Standard Time",
      "canadaeast": "Eastern Standard Time",
      "centralindia": "India Standard Time",
      "centralus": "Central Standard Time",
      "chinaeast": "China Standard Time",
      "chinaeast2": "China Standard Time",
      "chinanorth": "China Standard Time",
      "chinanorth2": "China Standard Time",
      "eastasia": "China Standard Time",
      "eastus": "Eastern Standard Time",
      "eastus2": "Eastern Standard Time",
      "francecentral": "Central Europe Standard Time",
      "francesouth": "Central Europe Standard Time",
      "germanynorth": "Central Europe Standard Time",
      "germanywestcentral": "Central Europe Standard Time",
      "japaneast": "Tokyo Standard Time",
      "japanwest": "Tokyo Standard Time",
      "jioindiacentral": "India Standard Time",
      "jioindiawest": "India Standard Time",
      "koreacentral": "Korea Standard Time",
      "koreasouth": "Korea Standard Time",
      "northcentralus": "Central Standard Time",
      "northeurope": "GMT Standard Time",
      "norwayeast": "Central Europe Standard Time",
      "norwaywest": "Central Europe Standard Time",
      "southafricanorth": "South Africa Standard Time",
      "southafricawest": "South Africa Standard Time",
      "southcentralus": "Central Standard Time",
      "southindia": "India Standard Time",
      "southeastasia": "Singapore Standard Time",
      "swedencentral": "Central Europe Standard Time",
      "switzerlandnorth": "Central Europe Standard Time",
      "switzerlandwest": "Central Europe Standard Time",
      "uaecentral": "Arabian Standard Time",
      "uaenorth": "Arabian Standard Time",
      "uksouth": "GMT Standard Time",
      "ukwest": "GMT Standard Time",
      "usdodcentral": "Central Standard Time",
      "usdodeast": "Eastern Standard Time",
      "usgovarizona": "Mountain Standard Time",
      "usgoviowa": "Central Standard Time",
      "usgovtexas": "Central Standard Time",
      "usgovvirginia": "Eastern Standard Time",
      "westcentralus": "Mountain Standard Time",
      "westeurope": "Central Europe Standard Time",
      "westindia": "India Standard Time",
      "westus": "Pacific Standard Time",
      "westus2": "Pacific Standard Time",
      "westus3": "Mountain Standard Time"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2022-08-08",
      "name": "[parameters('AutomationAccountName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2022-08-08",
      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), variables('RunbookName'))]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "runbookType": "PowerShell",
        "logProgress": false,
        "logVerbose": false,
        "publishContentLink": {
          "uri": "https://raw.githubusercontent.com/jamasten/AvdScalingTool/main/scale.ps1",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "schedules",
        "count": "[length(range(0, 4))]"
      },
      "type": "Microsoft.Automation/automationAccounts/schedules",
      "apiVersion": "2022-08-08",
      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
      "properties": {
        "advancedSchedule": {},
        "description": null,
        "expiryTime": null,
        "frequency": "Hour",
        "interval": 1,
        "startTime": "[dateTimeAdd(parameters('Time'), format('PT{0}M', mul(add(range(0, 4)[copyIndex()], 1), 15)))]",
        "timeZone": "[variables('TimeZones')[parameters('Location')]]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "jobSchedules",
        "count": "[length(range(0, 4))]"
      },
      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
      "apiVersion": "2022-08-08",
      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), guid(parameters('Time'), variables('RunbookName'), parameters('HostPoolName'), string(range(0, 4)[copyIndex()])))]",
      "properties": {
        "parameters": {
          "TenantId": "[subscription().tenantId]",
          "SubscriptionId": "[subscription().subscriptionId]",
          "EnvironmentName": "[environment().name]",
          "ResourceGroupName": "[parameters('HostPoolResourceGroupName')]",
          "HostPoolName": "[parameters('HostPoolName')]",
          "MaintenanceTagName": "Maintenance",
          "TimeDifference": "[variables('TimeDifferences')[parameters('Location')]]",
          "BeginPeakTime": "[parameters('BeginPeakTime')]",
          "EndPeakTime": "[parameters('EndPeakTime')]",
          "SessionThresholdPerCPU": "[parameters('SessionThresholdPerCPU')]",
          "MinimumNumberOfRDSH": "[parameters('MinimumNumberOfRdsh')]",
          "LimitSecondsToForceLogOffUser": "[parameters('LimitSecondsToForceLogOffUser')]",
          "LogOffMessageTitle": "Machine is about to shutdown.",
          "LogOffMessageBody": "Your session will be logged off. Please save and close everything."
        },
        "runbook": {
          "name": "[variables('RunbookName')]"
        },
        "runOn": null,
        "schedule": {
          "name": "[format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[range(0, 4)[copyIndex()]], 1), 15))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), variables('RunbookName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/schedules', parameters('AutomationAccountName'), format('{0}_{1}min', parameters('HostPoolName'), mul(add(range(0, 4)[range(0, 4)[copyIndex()]], 1), 15)))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('LogAnalyticsWorkspaceResourceId')))]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
      "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
      "properties": {
        "logs": [
          {
            "category": "JobLogs",
            "enabled": true
          },
          {
            "category": "JobStreams",
            "enabled": true
          }
        ],
        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
      ]
    },
    {
      "condition": "[not(parameters('ExistingAutomationAccount'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('AutomationAccount_{0}', parameters('Timestamp'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountName": {
            "value": "[parameters('AutomationAccountName')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "2045105181871800126"
            }
          },
          "parameters": {
            "AutomationAccountName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2022-08-08",
              "name": "[parameters('AutomationAccountName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "Free"
                }
              }
            }
          ]
        }
      }
    },
    {
      "copy": {
        "name": "roleAssignments",
        "count": "[length(range(0, length(variables('RoleAssignments'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RoleAssignment_{0}_{1}', variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]], parameters('Timestamp'))]",
      "resourceGroup": "[variables('RoleAssignments')[range(0, length(variables('RoleAssignments')))[copyIndex()]]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrincipalId": {
            "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2022-08-08', 'full').identity.principalId]"
          },
          "RoleDefinitionId": {
            "value": "[resourceId('Microsoft.Authorization/roleDefinitions', '40c5ff49-9181-41f8-ae61-143b0e78555e')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.16.2.56959",
              "templateHash": "7200534500754601917"
            }
          },
          "parameters": {
            "PrincipalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
      ]
    }
  ]
}